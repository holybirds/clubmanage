package com.example.clubmanage.bean;

import java.util.ArrayList;
import java.util.List;

public class ActivityMemberExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table activity_member
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table activity_member
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table activity_member
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity_member
     *
     * @mbggenerated
     */
    public ActivityMemberExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity_member
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity_member
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity_member
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity_member
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity_member
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity_member
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity_member
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity_member
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity_member
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table activity_member
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table activity_member
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andActivityMamberidIsNull() {
            addCriterion("activity_mamberid is null");
            return (Criteria) this;
        }

        public Criteria andActivityMamberidIsNotNull() {
            addCriterion("activity_mamberid is not null");
            return (Criteria) this;
        }

        public Criteria andActivityMamberidEqualTo(Integer value) {
            addCriterion("activity_mamberid =", value, "activityMamberid");
            return (Criteria) this;
        }

        public Criteria andActivityMamberidNotEqualTo(Integer value) {
            addCriterion("activity_mamberid <>", value, "activityMamberid");
            return (Criteria) this;
        }

        public Criteria andActivityMamberidGreaterThan(Integer value) {
            addCriterion("activity_mamberid >", value, "activityMamberid");
            return (Criteria) this;
        }

        public Criteria andActivityMamberidGreaterThanOrEqualTo(Integer value) {
            addCriterion("activity_mamberid >=", value, "activityMamberid");
            return (Criteria) this;
        }

        public Criteria andActivityMamberidLessThan(Integer value) {
            addCriterion("activity_mamberid <", value, "activityMamberid");
            return (Criteria) this;
        }

        public Criteria andActivityMamberidLessThanOrEqualTo(Integer value) {
            addCriterion("activity_mamberid <=", value, "activityMamberid");
            return (Criteria) this;
        }

        public Criteria andActivityMamberidIn(List<Integer> values) {
            addCriterion("activity_mamberid in", values, "activityMamberid");
            return (Criteria) this;
        }

        public Criteria andActivityMamberidNotIn(List<Integer> values) {
            addCriterion("activity_mamberid not in", values, "activityMamberid");
            return (Criteria) this;
        }

        public Criteria andActivityMamberidBetween(Integer value1, Integer value2) {
            addCriterion("activity_mamberid between", value1, value2, "activityMamberid");
            return (Criteria) this;
        }

        public Criteria andActivityMamberidNotBetween(Integer value1, Integer value2) {
            addCriterion("activity_mamberid not between", value1, value2, "activityMamberid");
            return (Criteria) this;
        }

        public Criteria andActivityNameIsNull() {
            addCriterion("activity_name is null");
            return (Criteria) this;
        }

        public Criteria andActivityNameIsNotNull() {
            addCriterion("activity_name is not null");
            return (Criteria) this;
        }

        public Criteria andActivityNameEqualTo(String value) {
            addCriterion("activity_name =", value, "activityName");
            return (Criteria) this;
        }

        public Criteria andActivityNameNotEqualTo(String value) {
            addCriterion("activity_name <>", value, "activityName");
            return (Criteria) this;
        }

        public Criteria andActivityNameGreaterThan(String value) {
            addCriterion("activity_name >", value, "activityName");
            return (Criteria) this;
        }

        public Criteria andActivityNameGreaterThanOrEqualTo(String value) {
            addCriterion("activity_name >=", value, "activityName");
            return (Criteria) this;
        }

        public Criteria andActivityNameLessThan(String value) {
            addCriterion("activity_name <", value, "activityName");
            return (Criteria) this;
        }

        public Criteria andActivityNameLessThanOrEqualTo(String value) {
            addCriterion("activity_name <=", value, "activityName");
            return (Criteria) this;
        }

        public Criteria andActivityNameLike(String value) {
            addCriterion("activity_name like", value, "activityName");
            return (Criteria) this;
        }

        public Criteria andActivityNameNotLike(String value) {
            addCriterion("activity_name not like", value, "activityName");
            return (Criteria) this;
        }

        public Criteria andActivityNameIn(List<String> values) {
            addCriterion("activity_name in", values, "activityName");
            return (Criteria) this;
        }

        public Criteria andActivityNameNotIn(List<String> values) {
            addCriterion("activity_name not in", values, "activityName");
            return (Criteria) this;
        }

        public Criteria andActivityNameBetween(String value1, String value2) {
            addCriterion("activity_name between", value1, value2, "activityName");
            return (Criteria) this;
        }

        public Criteria andActivityNameNotBetween(String value1, String value2) {
            addCriterion("activity_name not between", value1, value2, "activityName");
            return (Criteria) this;
        }

        public Criteria andClubNameIsNull() {
            addCriterion("club_name is null");
            return (Criteria) this;
        }

        public Criteria andClubNameIsNotNull() {
            addCriterion("club_name is not null");
            return (Criteria) this;
        }

        public Criteria andClubNameEqualTo(String value) {
            addCriterion("club_name =", value, "clubName");
            return (Criteria) this;
        }

        public Criteria andClubNameNotEqualTo(String value) {
            addCriterion("club_name <>", value, "clubName");
            return (Criteria) this;
        }

        public Criteria andClubNameGreaterThan(String value) {
            addCriterion("club_name >", value, "clubName");
            return (Criteria) this;
        }

        public Criteria andClubNameGreaterThanOrEqualTo(String value) {
            addCriterion("club_name >=", value, "clubName");
            return (Criteria) this;
        }

        public Criteria andClubNameLessThan(String value) {
            addCriterion("club_name <", value, "clubName");
            return (Criteria) this;
        }

        public Criteria andClubNameLessThanOrEqualTo(String value) {
            addCriterion("club_name <=", value, "clubName");
            return (Criteria) this;
        }

        public Criteria andClubNameLike(String value) {
            addCriterion("club_name like", value, "clubName");
            return (Criteria) this;
        }

        public Criteria andClubNameNotLike(String value) {
            addCriterion("club_name not like", value, "clubName");
            return (Criteria) this;
        }

        public Criteria andClubNameIn(List<String> values) {
            addCriterion("club_name in", values, "clubName");
            return (Criteria) this;
        }

        public Criteria andClubNameNotIn(List<String> values) {
            addCriterion("club_name not in", values, "clubName");
            return (Criteria) this;
        }

        public Criteria andClubNameBetween(String value1, String value2) {
            addCriterion("club_name between", value1, value2, "clubName");
            return (Criteria) this;
        }

        public Criteria andClubNameNotBetween(String value1, String value2) {
            addCriterion("club_name not between", value1, value2, "clubName");
            return (Criteria) this;
        }

        public Criteria andMemberNameIsNull() {
            addCriterion("member_name is null");
            return (Criteria) this;
        }

        public Criteria andMemberNameIsNotNull() {
            addCriterion("member_name is not null");
            return (Criteria) this;
        }

        public Criteria andMemberNameEqualTo(String value) {
            addCriterion("member_name =", value, "memberName");
            return (Criteria) this;
        }

        public Criteria andMemberNameNotEqualTo(String value) {
            addCriterion("member_name <>", value, "memberName");
            return (Criteria) this;
        }

        public Criteria andMemberNameGreaterThan(String value) {
            addCriterion("member_name >", value, "memberName");
            return (Criteria) this;
        }

        public Criteria andMemberNameGreaterThanOrEqualTo(String value) {
            addCriterion("member_name >=", value, "memberName");
            return (Criteria) this;
        }

        public Criteria andMemberNameLessThan(String value) {
            addCriterion("member_name <", value, "memberName");
            return (Criteria) this;
        }

        public Criteria andMemberNameLessThanOrEqualTo(String value) {
            addCriterion("member_name <=", value, "memberName");
            return (Criteria) this;
        }

        public Criteria andMemberNameLike(String value) {
            addCriterion("member_name like", value, "memberName");
            return (Criteria) this;
        }

        public Criteria andMemberNameNotLike(String value) {
            addCriterion("member_name not like", value, "memberName");
            return (Criteria) this;
        }

        public Criteria andMemberNameIn(List<String> values) {
            addCriterion("member_name in", values, "memberName");
            return (Criteria) this;
        }

        public Criteria andMemberNameNotIn(List<String> values) {
            addCriterion("member_name not in", values, "memberName");
            return (Criteria) this;
        }

        public Criteria andMemberNameBetween(String value1, String value2) {
            addCriterion("member_name between", value1, value2, "memberName");
            return (Criteria) this;
        }

        public Criteria andMemberNameNotBetween(String value1, String value2) {
            addCriterion("member_name not between", value1, value2, "memberName");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table activity_member
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table activity_member
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value) {
            super();
            this.condition = condition;
            this.value = value;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.betweenValue = true;
        }
    }
}