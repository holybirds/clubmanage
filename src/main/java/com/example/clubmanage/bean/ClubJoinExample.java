package com.example.clubmanage.bean;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class ClubJoinExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table club_join
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table club_join
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table club_join
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table club_join
     *
     * @mbggenerated
     */
    public ClubJoinExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table club_join
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table club_join
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table club_join
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table club_join
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table club_join
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table club_join
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table club_join
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table club_join
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table club_join
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table club_join
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table club_join
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andClubjoinIdIsNull() {
            addCriterion("clubjoin_id is null");
            return (Criteria) this;
        }

        public Criteria andClubjoinIdIsNotNull() {
            addCriterion("clubjoin_id is not null");
            return (Criteria) this;
        }

        public Criteria andClubjoinIdEqualTo(Integer value) {
            addCriterion("clubjoin_id =", value, "clubjoinId");
            return (Criteria) this;
        }

        public Criteria andClubjoinIdNotEqualTo(Integer value) {
            addCriterion("clubjoin_id <>", value, "clubjoinId");
            return (Criteria) this;
        }

        public Criteria andClubjoinIdGreaterThan(Integer value) {
            addCriterion("clubjoin_id >", value, "clubjoinId");
            return (Criteria) this;
        }

        public Criteria andClubjoinIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("clubjoin_id >=", value, "clubjoinId");
            return (Criteria) this;
        }

        public Criteria andClubjoinIdLessThan(Integer value) {
            addCriterion("clubjoin_id <", value, "clubjoinId");
            return (Criteria) this;
        }

        public Criteria andClubjoinIdLessThanOrEqualTo(Integer value) {
            addCriterion("clubjoin_id <=", value, "clubjoinId");
            return (Criteria) this;
        }

        public Criteria andClubjoinIdIn(List<Integer> values) {
            addCriterion("clubjoin_id in", values, "clubjoinId");
            return (Criteria) this;
        }

        public Criteria andClubjoinIdNotIn(List<Integer> values) {
            addCriterion("clubjoin_id not in", values, "clubjoinId");
            return (Criteria) this;
        }

        public Criteria andClubjoinIdBetween(Integer value1, Integer value2) {
            addCriterion("clubjoin_id between", value1, value2, "clubjoinId");
            return (Criteria) this;
        }

        public Criteria andClubjoinIdNotBetween(Integer value1, Integer value2) {
            addCriterion("clubjoin_id not between", value1, value2, "clubjoinId");
            return (Criteria) this;
        }

        public Criteria andClubNameIsNull() {
            addCriterion("club_name is null");
            return (Criteria) this;
        }

        public Criteria andClubNameIsNotNull() {
            addCriterion("club_name is not null");
            return (Criteria) this;
        }

        public Criteria andClubNameEqualTo(String value) {
            addCriterion("club_name =", value, "clubName");
            return (Criteria) this;
        }

        public Criteria andClubNameNotEqualTo(String value) {
            addCriterion("club_name <>", value, "clubName");
            return (Criteria) this;
        }

        public Criteria andClubNameGreaterThan(String value) {
            addCriterion("club_name >", value, "clubName");
            return (Criteria) this;
        }

        public Criteria andClubNameGreaterThanOrEqualTo(String value) {
            addCriterion("club_name >=", value, "clubName");
            return (Criteria) this;
        }

        public Criteria andClubNameLessThan(String value) {
            addCriterion("club_name <", value, "clubName");
            return (Criteria) this;
        }

        public Criteria andClubNameLessThanOrEqualTo(String value) {
            addCriterion("club_name <=", value, "clubName");
            return (Criteria) this;
        }

        public Criteria andClubNameLike(String value) {
            addCriterion("club_name like", value, "clubName");
            return (Criteria) this;
        }

        public Criteria andClubNameNotLike(String value) {
            addCriterion("club_name not like", value, "clubName");
            return (Criteria) this;
        }

        public Criteria andClubNameIn(List<String> values) {
            addCriterion("club_name in", values, "clubName");
            return (Criteria) this;
        }

        public Criteria andClubNameNotIn(List<String> values) {
            addCriterion("club_name not in", values, "clubName");
            return (Criteria) this;
        }

        public Criteria andClubNameBetween(String value1, String value2) {
            addCriterion("club_name between", value1, value2, "clubName");
            return (Criteria) this;
        }

        public Criteria andClubNameNotBetween(String value1, String value2) {
            addCriterion("club_name not between", value1, value2, "clubName");
            return (Criteria) this;
        }

        public Criteria andClubmanagerNameIsNull() {
            addCriterion("clubmanager_name is null");
            return (Criteria) this;
        }

        public Criteria andClubmanagerNameIsNotNull() {
            addCriterion("clubmanager_name is not null");
            return (Criteria) this;
        }

        public Criteria andClubmanagerNameEqualTo(String value) {
            addCriterion("clubmanager_name =", value, "clubmanagerName");
            return (Criteria) this;
        }

        public Criteria andClubmanagerNameNotEqualTo(String value) {
            addCriterion("clubmanager_name <>", value, "clubmanagerName");
            return (Criteria) this;
        }

        public Criteria andClubmanagerNameGreaterThan(String value) {
            addCriterion("clubmanager_name >", value, "clubmanagerName");
            return (Criteria) this;
        }

        public Criteria andClubmanagerNameGreaterThanOrEqualTo(String value) {
            addCriterion("clubmanager_name >=", value, "clubmanagerName");
            return (Criteria) this;
        }

        public Criteria andClubmanagerNameLessThan(String value) {
            addCriterion("clubmanager_name <", value, "clubmanagerName");
            return (Criteria) this;
        }

        public Criteria andClubmanagerNameLessThanOrEqualTo(String value) {
            addCriterion("clubmanager_name <=", value, "clubmanagerName");
            return (Criteria) this;
        }

        public Criteria andClubmanagerNameLike(String value) {
            addCriterion("clubmanager_name like", value, "clubmanagerName");
            return (Criteria) this;
        }

        public Criteria andClubmanagerNameNotLike(String value) {
            addCriterion("clubmanager_name not like", value, "clubmanagerName");
            return (Criteria) this;
        }

        public Criteria andClubmanagerNameIn(List<String> values) {
            addCriterion("clubmanager_name in", values, "clubmanagerName");
            return (Criteria) this;
        }

        public Criteria andClubmanagerNameNotIn(List<String> values) {
            addCriterion("clubmanager_name not in", values, "clubmanagerName");
            return (Criteria) this;
        }

        public Criteria andClubmanagerNameBetween(String value1, String value2) {
            addCriterion("clubmanager_name between", value1, value2, "clubmanagerName");
            return (Criteria) this;
        }

        public Criteria andClubmanagerNameNotBetween(String value1, String value2) {
            addCriterion("clubmanager_name not between", value1, value2, "clubmanagerName");
            return (Criteria) this;
        }

        public Criteria andUserjoinNameIsNull() {
            addCriterion("userjoin_name is null");
            return (Criteria) this;
        }

        public Criteria andUserjoinNameIsNotNull() {
            addCriterion("userjoin_name is not null");
            return (Criteria) this;
        }

        public Criteria andUserjoinNameEqualTo(String value) {
            addCriterion("userjoin_name =", value, "userjoinName");
            return (Criteria) this;
        }

        public Criteria andUserjoinNameNotEqualTo(String value) {
            addCriterion("userjoin_name <>", value, "userjoinName");
            return (Criteria) this;
        }

        public Criteria andUserjoinNameGreaterThan(String value) {
            addCriterion("userjoin_name >", value, "userjoinName");
            return (Criteria) this;
        }

        public Criteria andUserjoinNameGreaterThanOrEqualTo(String value) {
            addCriterion("userjoin_name >=", value, "userjoinName");
            return (Criteria) this;
        }

        public Criteria andUserjoinNameLessThan(String value) {
            addCriterion("userjoin_name <", value, "userjoinName");
            return (Criteria) this;
        }

        public Criteria andUserjoinNameLessThanOrEqualTo(String value) {
            addCriterion("userjoin_name <=", value, "userjoinName");
            return (Criteria) this;
        }

        public Criteria andUserjoinNameLike(String value) {
            addCriterion("userjoin_name like", value, "userjoinName");
            return (Criteria) this;
        }

        public Criteria andUserjoinNameNotLike(String value) {
            addCriterion("userjoin_name not like", value, "userjoinName");
            return (Criteria) this;
        }

        public Criteria andUserjoinNameIn(List<String> values) {
            addCriterion("userjoin_name in", values, "userjoinName");
            return (Criteria) this;
        }

        public Criteria andUserjoinNameNotIn(List<String> values) {
            addCriterion("userjoin_name not in", values, "userjoinName");
            return (Criteria) this;
        }

        public Criteria andUserjoinNameBetween(String value1, String value2) {
            addCriterion("userjoin_name between", value1, value2, "userjoinName");
            return (Criteria) this;
        }

        public Criteria andUserjoinNameNotBetween(String value1, String value2) {
            addCriterion("userjoin_name not between", value1, value2, "userjoinName");
            return (Criteria) this;
        }

        public Criteria andJoinDateIsNull() {
            addCriterion("join_date is null");
            return (Criteria) this;
        }

        public Criteria andJoinDateIsNotNull() {
            addCriterion("join_date is not null");
            return (Criteria) this;
        }

        public Criteria andJoinDateEqualTo(Date value) {
            addCriterionForJDBCDate("join_date =", value, "joinDate");
            return (Criteria) this;
        }

        public Criteria andJoinDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("join_date <>", value, "joinDate");
            return (Criteria) this;
        }

        public Criteria andJoinDateGreaterThan(Date value) {
            addCriterionForJDBCDate("join_date >", value, "joinDate");
            return (Criteria) this;
        }

        public Criteria andJoinDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("join_date >=", value, "joinDate");
            return (Criteria) this;
        }

        public Criteria andJoinDateLessThan(Date value) {
            addCriterionForJDBCDate("join_date <", value, "joinDate");
            return (Criteria) this;
        }

        public Criteria andJoinDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("join_date <=", value, "joinDate");
            return (Criteria) this;
        }

        public Criteria andJoinDateIn(List<Date> values) {
            addCriterionForJDBCDate("join_date in", values, "joinDate");
            return (Criteria) this;
        }

        public Criteria andJoinDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("join_date not in", values, "joinDate");
            return (Criteria) this;
        }

        public Criteria andJoinDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("join_date between", value1, value2, "joinDate");
            return (Criteria) this;
        }

        public Criteria andJoinDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("join_date not between", value1, value2, "joinDate");
            return (Criteria) this;
        }

        public Criteria andJoinedClubIsNull() {
            addCriterion("joined_club is null");
            return (Criteria) this;
        }

        public Criteria andJoinedClubIsNotNull() {
            addCriterion("joined_club is not null");
            return (Criteria) this;
        }

        public Criteria andJoinedClubEqualTo(String value) {
            addCriterion("joined_club =", value, "joinedClub");
            return (Criteria) this;
        }

        public Criteria andJoinedClubNotEqualTo(String value) {
            addCriterion("joined_club <>", value, "joinedClub");
            return (Criteria) this;
        }

        public Criteria andJoinedClubGreaterThan(String value) {
            addCriterion("joined_club >", value, "joinedClub");
            return (Criteria) this;
        }

        public Criteria andJoinedClubGreaterThanOrEqualTo(String value) {
            addCriterion("joined_club >=", value, "joinedClub");
            return (Criteria) this;
        }

        public Criteria andJoinedClubLessThan(String value) {
            addCriterion("joined_club <", value, "joinedClub");
            return (Criteria) this;
        }

        public Criteria andJoinedClubLessThanOrEqualTo(String value) {
            addCriterion("joined_club <=", value, "joinedClub");
            return (Criteria) this;
        }

        public Criteria andJoinedClubLike(String value) {
            addCriterion("joined_club like", value, "joinedClub");
            return (Criteria) this;
        }

        public Criteria andJoinedClubNotLike(String value) {
            addCriterion("joined_club not like", value, "joinedClub");
            return (Criteria) this;
        }

        public Criteria andJoinedClubIn(List<String> values) {
            addCriterion("joined_club in", values, "joinedClub");
            return (Criteria) this;
        }

        public Criteria andJoinedClubNotIn(List<String> values) {
            addCriterion("joined_club not in", values, "joinedClub");
            return (Criteria) this;
        }

        public Criteria andJoinedClubBetween(String value1, String value2) {
            addCriterion("joined_club between", value1, value2, "joinedClub");
            return (Criteria) this;
        }

        public Criteria andJoinedClubNotBetween(String value1, String value2) {
            addCriterion("joined_club not between", value1, value2, "joinedClub");
            return (Criteria) this;
        }

        public Criteria andClubjoinStateIsNull() {
            addCriterion("clubjoin_state is null");
            return (Criteria) this;
        }

        public Criteria andClubjoinStateIsNotNull() {
            addCriterion("clubjoin_state is not null");
            return (Criteria) this;
        }

        public Criteria andClubjoinStateEqualTo(Integer value) {
            addCriterion("clubjoin_state =", value, "clubjoinState");
            return (Criteria) this;
        }

        public Criteria andClubjoinStateNotEqualTo(Integer value) {
            addCriterion("clubjoin_state <>", value, "clubjoinState");
            return (Criteria) this;
        }

        public Criteria andClubjoinStateGreaterThan(Integer value) {
            addCriterion("clubjoin_state >", value, "clubjoinState");
            return (Criteria) this;
        }

        public Criteria andClubjoinStateGreaterThanOrEqualTo(Integer value) {
            addCriterion("clubjoin_state >=", value, "clubjoinState");
            return (Criteria) this;
        }

        public Criteria andClubjoinStateLessThan(Integer value) {
            addCriterion("clubjoin_state <", value, "clubjoinState");
            return (Criteria) this;
        }

        public Criteria andClubjoinStateLessThanOrEqualTo(Integer value) {
            addCriterion("clubjoin_state <=", value, "clubjoinState");
            return (Criteria) this;
        }

        public Criteria andClubjoinStateIn(List<Integer> values) {
            addCriterion("clubjoin_state in", values, "clubjoinState");
            return (Criteria) this;
        }

        public Criteria andClubjoinStateNotIn(List<Integer> values) {
            addCriterion("clubjoin_state not in", values, "clubjoinState");
            return (Criteria) this;
        }

        public Criteria andClubjoinStateBetween(Integer value1, Integer value2) {
            addCriterion("clubjoin_state between", value1, value2, "clubjoinState");
            return (Criteria) this;
        }

        public Criteria andClubjoinStateNotBetween(Integer value1, Integer value2) {
            addCriterion("clubjoin_state not between", value1, value2, "clubjoinState");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table club_join
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table club_join
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value) {
            super();
            this.condition = condition;
            this.value = value;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.betweenValue = true;
        }
    }
}