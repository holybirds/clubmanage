<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">

    <!--开启注解的扫描，希望处理service和dao，controller不需要Spring框架去处理-->

    <import resource="springmvc.xml"/>

    <context:component-scan base-package="com.example.clubmanage" >
    <!--配置哪些注解不扫描-->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>

    <!--导入外部配置文件-->
    <context:property-placeholder location="classpath:dbconfig.properties"/>
    <!--配数据源-->
    <bean id="ds" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${password}"/>
        <property name="driverClassName" value="${driverClassName}"/>
        <property name="url" value="${url}"/>
        <property name="maxActive" value="${maxActive}"/>
        <property name="initialSize" value="${initialSize}"/>
        <property name="minIdle" value="${minIdle}"/>
        <property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}"/>
    </bean>
    <!--配置mybatis操作数据库-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="ds" />
        <property name="configLocation" value="classpath:mybatisconfig.xml"/>
        <property name="mapperLocations" value="classpath:mybatismapper/*.xml"/>
    </bean>
    <!--配置AccountDao接口所在包-->
    <bean id="mapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.example.clubmanage.dao"/>
    </bean>

<!--    <mybatis-spring:scan base-package="com.example.clubmanage.dao"/>-->
    <!--配置事务控制-->
    <!--配置事务管理器-->
    <bean id="tm" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="ds"/>
    </bean>
    <!--基于xml配置事务-->
    <aop:config>
        <aop:pointcut id="txPoint" expression="execution(* com.example.clubmanage.service.*.*(..))"/>
        <aop:advisor advice-ref="mytx" pointcut-ref="txPoint"/>
    </aop:config>

    <tx:advice id="mytx" transaction-manager="tm">
    <!--配置事务属性-->
        <tx:attributes>
            <tx:method name="*" rollback-for="java.lang.Exception"/>
            <tx:method name="get*" read-only="true"/>
        </tx:attributes>
    </tx:advice>


</beans>